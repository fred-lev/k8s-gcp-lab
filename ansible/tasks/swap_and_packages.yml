---
- name: disable swap
  become: true
  ansible.builtin.command:
    argv:
      - swapoff
      - -a
  changed_when: false

- name: disable swap in fstab
  become: true
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: install docker and extra packages
  become: true
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - bash-completion
      - gpg
      - curl
      - docker.io
      - etcd-client
      - vim
    update_cache: true
  register: result
  until: result is not failed

- name: use systemd in docker
  become: true
  ansible.builtin.replace:
    path: /lib/systemd/system/docker.service
    regexp: "^ExecStart=/usr/bin/dockerd"
    replace: "ExecStart=/usr/bin/dockerd --exec-opt native.cgroupdriver=systemd"
  notify: restart docker

- name: restart docker service now if needed
  ansible.builtin.meta: flush_handlers

- name: create apt keyring directory if necessary
  become: true
  ansible.builtin.file:
    path: /etc/apt/keyrings
    mode: 0755
    state: directory

- name: add k8s repository key
  become: true
  ansible.builtin.apt_key:
    url: "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key"
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  register: result
  until: result is not failed

- name: add k8s repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/ /"
    filename: kubernetes
    mode: 0444
    update_cache: true

- name: install k8s packages
  become: true
  ansible.builtin.apt:
    name:
      - kubeadm
      - kubelet
      - kubectl
    update_cache: true
  register: result
  until: result is not failed

- name: put k8s packages on hold
  become: true
  ansible.builtin.command:
    argv:
      - apt-mark
      - hold
      - kubeadm
      - kubelet
      - kubectl
  changed_when: false
